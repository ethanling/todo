{"ast":null,"code":"import _defineProperty from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nexport const TodoContext = React.createContext(); // const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  const handleSetNewTodo = item => {\n    setTodo(item);\n    console.log(item);\n    handleAddToList(todo);\n  };\n\n  const handleAddToList = item => {\n    setList(prevState => _objectSpread({}, prevState, {\n      item\n    }));\n    console.log('Added todo to list');\n  };\n\n  return React.createElement(TodoContext.Provider, {\n    value: {\n      handleSetNewTodo,\n      handleAddToList,\n      todo,\n      list\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default TodoProvider;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js"],"names":["React","useState","TodoContext","createContext","TodoProvider","props","todo","setTodo","list","setList","handleSetNewTodo","item","console","log","handleAddToList","prevState","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACFJ,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QACnBK,IADmB;AAAA,QACbC,OADa;;AAAA,qBAEFN,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,QAEnBO,IAFmB;AAAA,QAEbC,OAFa;;AAI1B,QAAMC,gBAAgB,GAAGC,IAAI,IAAI;AAC7BJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,eAAe,CAACR,IAAD,CAAf;AACH,GAJD;;AAMA,QAAMQ,eAAe,GAAGH,IAAI,IAAI;AAC5BF,IAAAA,OAAO,CAACM,SAAS,sBACVA,SADU;AACCJ,MAAAA;AADD,MAAV,CAAP;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GALD;;AAOA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,gBADG;AAEHI,MAAAA,eAFG;AAGHR,MAAAA,IAHG;AAIHE,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQMH,KAAK,CAACW,QARZ,CADJ;AAaH,CA9BD;;AAgCA,eAAeZ,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoContext = React.createContext();\n\n// const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n    const [todo, setTodo] = useState('');\n    const [list, setList] = useState([]);\n\n    const handleSetNewTodo = item => {\n        setTodo(item);\n        console.log(item);\n        handleAddToList(todo)\n    }\n\n    const handleAddToList = item => {\n        setList(prevState => ({\n            ...prevState, item\n        }));\n        console.log('Added todo to list');\n    }\n\n    return (\n        <TodoContext.Provider \n            value={{\n                handleSetNewTodo,\n                handleAddToList,\n                todo,\n                list\n            }}\n        >\n            { props.children }\n        </TodoContext.Provider>\n    )\n\n}\n\nexport default TodoProvider;"]},"metadata":{},"sourceType":"module"}