{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/components/ProgressCircle.js\";\nimport React, { useState, useContext, useEffect } from 'react'; // Global State\n\nimport { TodoContext } from '../context/TodoProvider';\n\nconst ProgressCircle = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        percent = _useState2[0],\n        setPercent = _useState2[1];\n\n  const _useContext = useContext(TodoContext),\n        list = _useContext.list,\n        completed = _useContext.completed;\n\n  useEffect(() => {\n    if (completed) {\n      console.log(completed / list.todos.length);\n    }\n  });\n  const sqSize = props.sqSize;\n  const strokeWidth = props.strokeWidth;\n  const radius = sqSize / strokeWidth * 2;\n  const viewBox = \"0 0 \".concat(sqSize, \" \").concat(sqSize);\n  const dashArray = radius * Math.PI * 2;\n  const dashOffset = dashArray - dashArray * percent / 100;\n  return React.createElement(\"svg\", {\n    width: sqSize,\n    height: sqSize,\n    viewBox: viewBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    className: \"circle-background\",\n    cx: sqSize / 2,\n    cy: sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(strokeWidth, \"px\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    className: \"circle-progress\",\n    cx: sqSize / 2,\n    cy: sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(strokeWidth, \"px\") // Start progress marker at 12 O'Clock\n    ,\n    transform: \"rotate(-90 \".concat(sqSize / 2, \" \").concat(sqSize / 2, \")\"),\n    style: {\n      strokeDasharray: dashArray,\n      strokeDashoffset: dashOffset\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    className: \"circle-text\",\n    x: \"50%\",\n    y: \"50%\",\n    dy: \".3em\",\n    textAnchor: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, percent));\n};\n\nexport default ProgressCircle;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/components/ProgressCircle.js"],"names":["React","useState","useContext","useEffect","TodoContext","ProgressCircle","props","percent","setPercent","list","completed","console","log","todos","length","sqSize","strokeWidth","radius","viewBox","dashArray","Math","PI","dashOffset","strokeDasharray","strokeDashoffset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CAEA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,oBACEL,QAAQ,CAAC,CAAD,CADV;AAAA;AAAA,QACrBM,OADqB;AAAA,QACZC,UADY;;AAAA,sBAEAN,UAAU,CAACE,WAAD,CAFV;AAAA,QAEpBK,IAFoB,eAEpBA,IAFoB;AAAA,QAEdC,SAFc,eAEdA,SAFc;;AAI5BP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,SAAJ,EAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,GAAGD,IAAI,CAACI,KAAL,CAAWC,MAAnC;AAEH;AACJ,GALQ,CAAT;AAOA,QAAMC,MAAM,GAAGT,KAAK,CAACS,MAArB;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACU,WAA1B;AACA,QAAMC,MAAM,GAAIF,MAAM,GAAGC,WAAV,GAAyB,CAAxC;AACA,QAAME,OAAO,iBAAUH,MAAV,cAAoBA,MAApB,CAAb;AACA,QAAMI,SAAS,GAAGF,MAAM,GAAGG,IAAI,CAACC,EAAd,GAAmB,CAArC;AACA,QAAMC,UAAU,GAAGH,SAAS,GAAGA,SAAS,GAAGZ,OAAZ,GAAsB,GAArD;AAEA,SACI;AACI,IAAA,KAAK,EAAEQ,MADX;AAEI,IAAA,MAAM,EAAEA,MAFZ;AAGI,IAAA,OAAO,EAAEG,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AACI,IAAA,SAAS,EAAC,mBADd;AAEI,IAAA,EAAE,EAAEH,MAAM,GAAG,CAFjB;AAGI,IAAA,EAAE,EAAEA,MAAM,GAAG,CAHjB;AAII,IAAA,CAAC,EAAEE,MAJP;AAKI,IAAA,WAAW,YAAKD,WAAL,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAYI;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,EAAE,EAAED,MAAM,GAAG,CAFjB;AAGI,IAAA,EAAE,EAAEA,MAAM,GAAG,CAHjB;AAII,IAAA,CAAC,EAAEE,MAJP;AAKI,IAAA,WAAW,YAAKD,WAAL,OALf,CAMI;AANJ;AAOI,IAAA,SAAS,uBAAgBD,MAAM,GAAG,CAAzB,cAA8BA,MAAM,GAAG,CAAvC,MAPb;AAQI,IAAA,KAAK,EAAE;AACHQ,MAAAA,eAAe,EAAEJ,SADd;AAEHK,MAAAA,gBAAgB,EAAEF;AAFf,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAyBI;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,CAAC,EAAC,KAFN;AAGI,IAAA,CAAC,EAAC,KAHN;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,UAAU,EAAC,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOMf,OAPN,CAzBJ,CADJ;AAqCH,CAvDD;;AAyDA,eAAeF,cAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\n// Global State\nimport { TodoContext } from '../context/TodoProvider';\n\nconst ProgressCircle = props => {\n    const [percent, setPercent] = useState(0);\n    const { list, completed } = useContext(TodoContext);\n\n    useEffect(() => {\n        if (completed) {\n            console.log(completed / list.todos.length);\n            \n        }\n    })\n\n    const sqSize = props.sqSize;\n    const strokeWidth = props.strokeWidth;\n    const radius = (sqSize / strokeWidth) * 2;\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - dashArray * percent / 100; \n\n    return (\n        <svg\n            width={sqSize}\n            height={sqSize}\n            viewBox={viewBox}\n        >\n            <circle\n                className=\"circle-background\"\n                cx={sqSize / 2}\n                cy={sqSize / 2}\n                r={radius}\n                strokeWidth={`${strokeWidth}px`}\n            />\n            <circle\n                className=\"circle-progress\"\n                cx={sqSize / 2}\n                cy={sqSize / 2}\n                r={radius}\n                strokeWidth={`${strokeWidth}px`}\n                // Start progress marker at 12 O'Clock\n                transform={`rotate(-90 ${sqSize / 2} ${sqSize / 2})`}\n                style={{\n                    strokeDasharray: dashArray,\n                    strokeDashoffset: dashOffset\n                }}\n            />\n            <text\n                className=\"circle-text\"\n                x=\"50%\"\n                y=\"50%\"\n                dy=\".3em\"\n                textAnchor=\"middle\"\n            >\n                { percent }\n            </text>\n        </svg>\n    );\n}\n\nexport default ProgressCircle;"]},"metadata":{},"sourceType":"module"}