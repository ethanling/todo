{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/context/ThemeProvider.js\";\nimport React, { useState, useEffect } from 'react'; // This context will change the theme of the app based on the time of day for the user\n// For now, just changes the background gradient\n\nconst themes = {\n  dawn: {\n    backgroundImage: \"linear-gradient(179.4deg, rgba(255,145,113,1) -16.9%, rgba(130,156,255,1) 119.9%)\"\n  },\n  day: {\n    backgroundImage: \"linear-gradient( 179.4deg,  rgba(111,214,255,1) -16.9%, rgba(75,68,255,1)119.9% )\"\n  },\n  dusk: {\n    backgroundImage: \"linear-gradient( 179.4deg,  rgba(12,20,69,1) -16.9%, rgba(71,30,84,1) 119.9% )\"\n  },\n  night: {\n    backgroundImage: \"linear-gradient( 179.4deg,  rgba(0,17,24,1) -16.9%, rgba(79,77,136,1)119.9% )\"\n  }\n};\nconst initialState = {\n  time: '',\n  theme: themes.day\n};\nexport const ThemeContext = React.createContext(initialState);\n\nconst ThemeProvider = ({\n  children\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        time = _useState2[0],\n        setTime = _useState2[1];\n\n  useEffect(time => {\n    // Set theme based on time of day\n    // Dawn 6-9, day 9-17, Dusk 17-20, Night 20 - 6\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 6 || currentHour > 20) {\n      setTime('night');\n    } else if (currentHour >= 6 && currentHour <= 9) {\n      setTime('dawn');\n    } else if (currentHour > 9 && currentHour < 17) {\n      setTime('day');\n    } else if (currentHour >= 17 && currentHour <= 20) {\n      setTime('dusk');\n    }\n  }, [time]);\n  const theme = themes[time];\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      theme\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, children);\n};\n\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/context/ThemeProvider.js"],"names":["React","useState","useEffect","themes","dawn","backgroundImage","day","dusk","night","initialState","time","theme","ThemeContext","createContext","ThemeProvider","children","setTime","currentHour","Date","getHours"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EACX;AAFF,GADK;AAKXC,EAAAA,GAAG,EAAE;AACDD,IAAAA,eAAe,EACX;AAFH,GALM;AASXE,EAAAA,IAAI,EAAE;AACFF,IAAAA,eAAe,EACX;AAFF,GATK;AAaXG,EAAAA,KAAK,EAAE;AACHH,IAAAA,eAAe,EACX;AAFD;AAbI,CAAf;AAmBA,MAAMI,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAER,MAAM,CAACG;AAFG,CAArB;AAKA,OAAO,MAAMM,YAAY,GAAGZ,KAAK,CAACa,aAAN,CAAoBJ,YAApB,CAArB;;AAEP,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACZd,QAAQ,CAAC,EAAD,CADI;AAAA;AAAA,QAC7BS,IAD6B;AAAA,QACvBM,OADuB;;AAGpCd,EAAAA,SAAS,CAACQ,IAAI,IAAI;AACd;AACA;AACA,UAAMO,WAAW,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAApB;;AACA,QAAIF,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAG,EAArC,EAAyC;AACrCD,MAAAA,OAAO,CAAC,OAAD,CAAP;AACH,KAFD,MAEO,IAAIC,WAAW,IAAI,CAAf,IAAoBA,WAAW,IAAI,CAAvC,EAA0C;AAC7CD,MAAAA,OAAO,CAAC,MAAD,CAAP;AACH,KAFM,MAEA,IAAIC,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAG,EAArC,EAAyC;AAC5CD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFM,MAEA,IAAIC,WAAW,IAAI,EAAf,IAAqBA,WAAW,IAAI,EAAxC,EAA4C;AAC/CD,MAAAA,OAAO,CAAC,MAAD,CAAP;AACH;AACJ,GAbQ,EAaN,CAACN,IAAD,CAbM,CAAT;AAeA,QAAMC,KAAK,GAAGR,MAAM,CAACO,IAAD,CAApB;AAEA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMI,QADN,CADJ;AAKH,CAzBD;;AA2BA,eAAeD,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// This context will change the theme of the app based on the time of day for the user\n// For now, just changes the background gradient\n\nconst themes = {\n    dawn: {\n        backgroundImage:\n            \"linear-gradient(179.4deg, rgba(255,145,113,1) -16.9%, rgba(130,156,255,1) 119.9%)\"\n    },\n    day: {\n        backgroundImage:\n            \"linear-gradient( 179.4deg,  rgba(111,214,255,1) -16.9%, rgba(75,68,255,1)119.9% )\"\n    },\n    dusk: {\n        backgroundImage:\n            \"linear-gradient( 179.4deg,  rgba(12,20,69,1) -16.9%, rgba(71,30,84,1) 119.9% )\"\n    },\n    night: {\n        backgroundImage:\n            \"linear-gradient( 179.4deg,  rgba(0,17,24,1) -16.9%, rgba(79,77,136,1)119.9% )\"\n    }\n};\n\nconst initialState = {\n    time: '',\n    theme: themes.day,\n};\n\nexport const ThemeContext = React.createContext(initialState);\n\nconst ThemeProvider = ({ children }) => {\n    const [time, setTime] = useState('');\n\n    useEffect(time => {\n        // Set theme based on time of day\n        // Dawn 6-9, day 9-17, Dusk 17-20, Night 20 - 6\n        const currentHour = new Date().getHours();\n        if (currentHour < 6 || currentHour > 20) {\n            setTime('night');\n        } else if (currentHour >= 6 && currentHour <= 9) {\n            setTime('dawn');\n        } else if (currentHour > 9 && currentHour < 17) {\n            setTime('day');\n        } else if (currentHour >= 17 && currentHour <= 20) {\n            setTime('dusk')\n        }\n    }, [time])\n\n    const theme = themes[time];\n\n    return (\n        <ThemeContext.Provider value={{ theme }}>\n            { children }\n        </ThemeContext.Provider>\n    )\n};\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}