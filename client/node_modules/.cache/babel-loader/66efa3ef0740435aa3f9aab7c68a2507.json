{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js\";\nimport React, { useState } from 'react';\nexport const TodoContext = React.createContext(); // const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState({\n    todos: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  const handleSetNewTodo = item => {\n    setTodo(item);\n    console.log(item);\n    handleAddToList(item);\n  };\n\n  const handleAddToList = (item, date) => {\n    setList(prevState => ({\n      todos: [...prevState.todos, item]\n    }));\n    setTodo('');\n  };\n\n  const handleCompleteTask = task => {\n    if (task.completed) {}\n  };\n\n  return React.createElement(TodoContext.Provider, {\n    value: {\n      handleSetNewTodo,\n      handleAddToList,\n      todo,\n      list\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default TodoProvider;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js"],"names":["React","useState","TodoContext","createContext","TodoProvider","props","todo","setTodo","todos","list","setList","handleSetNewTodo","item","console","log","handleAddToList","date","prevState","handleCompleteTask","task","completed","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACFJ,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QACnBK,IADmB;AAAA,QACbC,OADa;;AAAA,qBAEFN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD,CAFN;AAAA;AAAA,QAEnBC,IAFmB;AAAA,QAEbC,OAFa;;AAI1B,QAAMC,gBAAgB,GAAGC,IAAI,IAAI;AAC7BL,IAAAA,OAAO,CAACK,IAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,eAAe,CAACH,IAAD,CAAf;AACH,GAJD;;AAMA,QAAMG,eAAe,GAAG,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACpCN,IAAAA,OAAO,CAACO,SAAS,KAAK;AAClBT,MAAAA,KAAK,EAAE,CAAC,GAAGS,SAAS,CAACT,KAAd,EAAqBI,IAArB;AADW,KAAL,CAAV,CAAP;AAGAL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GALD;;AAOA,QAAMW,kBAAkB,GAAGC,IAAI,IAAI;AAC/B,QAAIA,IAAI,CAACC,SAAT,EAAoB,CAEnB;AACJ,GAJD;;AAMA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHT,MAAAA,gBADG;AAEHI,MAAAA,eAFG;AAGHT,MAAAA,IAHG;AAIHG,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQMJ,KAAK,CAACgB,QARZ,CADJ;AAaH,CApCD;;AAsCA,eAAejB,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoContext = React.createContext();\n\n// const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n    const [todo, setTodo] = useState('');\n    const [list, setList] = useState({ todos: [] });\n\n    const handleSetNewTodo = item => {\n        setTodo(item);\n        console.log(item);\n        handleAddToList(item)\n    }\n\n    const handleAddToList = (item, date) => {\n        setList(prevState => ({\n            todos: [...prevState.todos, item]\n        }))\n        setTodo('')\n    }\n\n    const handleCompleteTask = task => {\n        if (task.completed) {\n\n        }\n    }\n\n    return (\n        <TodoContext.Provider \n            value={{\n                handleSetNewTodo,\n                handleAddToList,\n                todo,\n                list\n            }}\n        >\n            { props.children }\n        </TodoContext.Provider>\n    )\n\n}\n\nexport default TodoProvider;"]},"metadata":{},"sourceType":"module"}