{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/components/AddTodo.js\";\nimport React, { useState, useContext } from 'react';\nimport { TodoContext } from '../context/TodoProvider';\n\nconst AddTodo = () => {\n  const _useState = useState('New Task'),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useContext = useContext(TodoContext),\n        handleSetNewTodo = _useContext.handleSetNewTodo;\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    handleSetNewTodo();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: input,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/components/AddTodo.js"],"names":["React","useState","useContext","TodoContext","AddTodo","input","setInput","handleSetNewTodo","handleInputChange","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,UAAD,CADhB;AAAA;AAAA,QACXI,KADW;AAAA,QACJC,QADI;;AAAA,sBAEWJ,UAAU,CAACC,WAAD,CAFrB;AAAA,QAEVI,gBAFU,eAEVA,gBAFU;;AAIlB,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAJ,IAAAA,gBAAgB;AACnB,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEF,KAAd;AAAqB,IAAA,QAAQ,EAAGG,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAdD;;AAgBA,eAAeJ,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TodoContext } from '../context/TodoProvider';\n\nconst AddTodo = () => {\n    const [input, setInput] = useState('New Task');\n    const { handleSetNewTodo } = useContext(TodoContext);\n\n    const handleInputChange = (e) => {\n        setInput(e.target.value)\n        handleSetNewTodo()\n    }\n\n    return (\n        <div>\n            <input value={input} onChange={ handleInputChange } />\n        </div>\n    )\n}\n\nexport default AddTodo;Â "]},"metadata":{},"sourceType":"module"}