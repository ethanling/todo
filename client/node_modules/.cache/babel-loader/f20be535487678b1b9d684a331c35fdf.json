{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/components/ProgressCircle.js\";\nimport React, { useState, useContext, useEffect } from 'react'; // Global State\n\nimport { TodoContext } from '../context/TodoProvider';\n\nconst ProgressCircle = () => {\n  const _useState = useState(60),\n        _useState2 = _slicedToArray(_useState, 2),\n        percent = _useState2[0],\n        setPercent = _useState2[1]; // const { completed } = useContext(TodoContext);\n\n\n  useEffect(() => {\n    const circle = document.querySelector('circle');\n    let radius = circle.r.baseVal.value;\n    let circumference = radius * 2 * Math.PI;\n  });\n  const sqSize = 80;\n  const strokeWidth = 8;\n  const radius = sqSize / strokeWidth * 2;\n  const viewBox = \"0 0 \".concat(sqSize, \" \").concat(sqSize);\n  const dashArray = radius * Math.PI * 2;\n  const dashOffset = dashArray - dashArray * percent / 100;\n  return React.createElement(\"svg\", {\n    width: this.props.sqSize,\n    height: this.props.sqSize,\n    viewBox: viewBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    className: \"circle-background\",\n    cx: this.props.sqSize / 2,\n    cy: this.props.sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(this.props.strokeWidth, \"px\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    className: \"circle-progress\",\n    cx: this.props.sqSize / 2,\n    cy: this.props.sqSize / 2,\n    r: radius,\n    strokeWidth: \"\".concat(this.props.strokeWidth, \"px\") // Start progress marker at 12 O'Clock\n    ,\n    transform: \"rotate(-90 \".concat(this.props.sqSize / 2, \" \").concat(this.props.sqSize / 2, \")\"),\n    style: {\n      strokeDasharray: dashArray,\n      strokeDashoffset: dashOffset\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    className: \"circle-text\",\n    x: \"50%\",\n    y: \"50%\",\n    dy: \".3em\",\n    textAnchor: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, percent));\n};\n\nexport default ProgressCircle;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/components/ProgressCircle.js"],"names":["React","useState","useContext","useEffect","TodoContext","ProgressCircle","percent","setPercent","circle","document","querySelector","radius","r","baseVal","value","circumference","Math","PI","sqSize","strokeWidth","viewBox","dashArray","dashOffset","props","strokeDasharray","strokeDashoffset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CAEA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACKJ,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAClBK,OADkB;AAAA,QACTC,UADS,kBAEzB;;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAIC,MAAM,GAAGH,MAAM,CAACI,CAAP,CAASC,OAAT,CAAiBC,KAA9B;AACA,QAAIC,aAAa,GAAGJ,MAAM,GAAG,CAAT,GAAaK,IAAI,CAACC,EAAtC;AACH,GAJQ,CAAT;AAMA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,WAAW,GAAG,CAApB;AACA,QAAMR,MAAM,GAAIO,MAAM,GAAGC,WAAV,GAAyB,CAAxC;AACA,QAAMC,OAAO,iBAAUF,MAAV,cAAoBA,MAApB,CAAb;AACA,QAAMG,SAAS,GAAGV,MAAM,GAAGK,IAAI,CAACC,EAAd,GAAmB,CAArC;AACA,QAAMK,UAAU,GAAGD,SAAS,GAAGA,SAAS,GAAGf,OAAZ,GAAsB,GAArD;AAEA,SACI;AACI,IAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWL,MADtB;AAEI,IAAA,MAAM,EAAE,KAAKK,KAAL,CAAWL,MAFvB;AAGI,IAAA,OAAO,EAAEE,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AACI,IAAA,SAAS,EAAC,mBADd;AAEI,IAAA,EAAE,EAAE,KAAKG,KAAL,CAAWL,MAAX,GAAoB,CAF5B;AAGI,IAAA,EAAE,EAAE,KAAKK,KAAL,CAAWL,MAAX,GAAoB,CAH5B;AAII,IAAA,CAAC,EAAEP,MAJP;AAKI,IAAA,WAAW,YAAK,KAAKY,KAAL,CAAWJ,WAAhB,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAYI;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,EAAE,EAAE,KAAKI,KAAL,CAAWL,MAAX,GAAoB,CAF5B;AAGI,IAAA,EAAE,EAAE,KAAKK,KAAL,CAAWL,MAAX,GAAoB,CAH5B;AAII,IAAA,CAAC,EAAEP,MAJP;AAKI,IAAA,WAAW,YAAK,KAAKY,KAAL,CAAWJ,WAAhB,OALf,CAMI;AANJ;AAOI,IAAA,SAAS,uBAAgB,KAAKI,KAAL,CAAWL,MAAX,GAAoB,CAApC,cAAyC,KAAKK,KAAL,CAC7CL,MAD6C,GACpC,CADL,MAPb;AASI,IAAA,KAAK,EAAE;AACHM,MAAAA,eAAe,EAAEH,SADd;AAEHI,MAAAA,gBAAgB,EAAEH;AAFf,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EA0BI;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,CAAC,EAAC,KAFN;AAGI,IAAA,CAAC,EAAC,KAHN;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,UAAU,EAAC,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOMhB,OAPN,CA1BJ,CADJ;AAsCH,CAvDD;;AAyDA,eAAeD,cAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\n// Global State\nimport { TodoContext } from '../context/TodoProvider';\n\nconst ProgressCircle = () => {\n    const [percent, setPercent] = useState(60);\n    // const { completed } = useContext(TodoContext);\n\n    useEffect(() => {\n        const circle = document.querySelector('circle');\n        let radius = circle.r.baseVal.value;\n        let circumference = radius * 2 * Math.PI;\n    })\n\n    const sqSize = 80;\n    const strokeWidth = 8;\n    const radius = (sqSize / strokeWidth) * 2;\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\n    const dashArray = radius * Math.PI * 2;\n    const dashOffset = dashArray - dashArray * percent / 100; \n\n    return (\n        <svg\n            width={this.props.sqSize}\n            height={this.props.sqSize}\n            viewBox={viewBox}\n        >\n            <circle\n                className=\"circle-background\"\n                cx={this.props.sqSize / 2}\n                cy={this.props.sqSize / 2}\n                r={radius}\n                strokeWidth={`${this.props.strokeWidth}px`}\n            />\n            <circle\n                className=\"circle-progress\"\n                cx={this.props.sqSize / 2}\n                cy={this.props.sqSize / 2}\n                r={radius}\n                strokeWidth={`${this.props.strokeWidth}px`}\n                // Start progress marker at 12 O'Clock\n                transform={`rotate(-90 ${this.props.sqSize / 2} ${this.props\n                    .sqSize / 2})`}\n                style={{\n                    strokeDasharray: dashArray,\n                    strokeDashoffset: dashOffset\n                }}\n            />\n            <text\n                className=\"circle-text\"\n                x=\"50%\"\n                y=\"50%\"\n                dy=\".3em\"\n                textAnchor=\"middle\"\n            >\n                { percent }\n            </text>\n        </svg>\n    );\n}\n\nexport default ProgressCircle;"]},"metadata":{},"sourceType":"module"}