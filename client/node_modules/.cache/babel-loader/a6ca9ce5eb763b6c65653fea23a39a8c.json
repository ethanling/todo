{"ast":null,"code":"import _slicedToArray from\"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';// State\nimport{TodoContext}from'../context/TodoProvider';var AddTodo=function AddTodo(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useContext=useContext(TodoContext),handleSetNewTodo=_useContext.handleSetNewTodo;var handleInputChange=function handleInputChange(e){setInput(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();var taskDate=new Date();if(input&&input!==''&&input!==' '){handleSetNewTodo(input.toString().trim(),taskDate);setInput('');}};return React.createElement(\"form\",{className:\"add-task\",onSubmit:handleSubmit,autoComplete:\"off\"},React.createElement(\"input\",{id:\"task\",value:input,onChange:handleInputChange}),React.createElement(\"label\",{htmlFor:\"task\"},\"Add a new task...\"),React.createElement(\"button\",{type:\"button\",className:\"add-task-button\",onClick:handleSubmit},\"+\"));};export default AddTodo;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/components/AddTodo.js"],"names":["React","useState","useContext","TodoContext","AddTodo","props","input","setInput","handleSetNewTodo","handleInputChange","e","target","value","handleSubmit","preventDefault","taskDate","Date","toString","trim"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA;AACA,OAASC,WAAT,KAA4B,yBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,eACKJ,QAAQ,CAAC,EAAD,CADb,wCACdK,KADc,eACPC,QADO,+BAEQL,UAAU,CAACC,WAAD,CAFlB,CAEbK,gBAFa,aAEbA,gBAFa,CAIrB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,CAAC,CAAI,CAC3BH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,CAAC,CAAI,CACtBA,CAAC,CAACI,cAAF,GAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,IAAJ,EAAjB,CAEA,GAAIV,KAAK,EAAIA,KAAK,GAAK,EAAnB,EAAyBA,KAAK,GAAK,GAAvC,CAA4C,CACxCE,gBAAgB,CAACF,KAAK,CAACW,QAAN,GAAiBC,IAAjB,EAAD,CAA0BH,QAA1B,CAAhB,CACAR,QAAQ,CAAC,EAAD,CAAR,CACH,CACJ,CATD,CAWA,MACI,6BAAM,SAAS,CAAC,UAAhB,CAA2B,QAAQ,CAAGM,YAAtC,CAAqD,YAAY,CAAC,KAAlE,EACI,6BAAO,EAAE,CAAC,MAAV,CAAiB,KAAK,CAAEP,KAAxB,CAA+B,QAAQ,CAAGG,iBAA1C,EADJ,CAEI,6BAAO,OAAO,CAAC,MAAf,sBAFJ,CAGI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,CAAkD,OAAO,CAAGI,YAA5D,MAHJ,CADJ,CAOH,CA1BD,CA4BA,cAAeT,CAAAA,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\n// State\nimport { TodoContext } from '../context/TodoProvider';\n\nconst AddTodo = props => {\n    const [input, setInput] = useState('');\n    const { handleSetNewTodo } = useContext(TodoContext);\n\n    const handleInputChange = e => {\n        setInput(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const taskDate = new Date();\n\n        if (input && input !== '' && input !== ' ') {\n            handleSetNewTodo(input.toString().trim(), taskDate);\n            setInput('');\n        }\n    }\n\n    return (\n        <form className=\"add-task\" onSubmit={ handleSubmit } autoComplete=\"off\">\n            <input id=\"task\" value={input} onChange={ handleInputChange } />\n            <label htmlFor=\"task\">Add a new task...</label>\n            <button type=\"button\" className=\"add-task-button\" onClick={ handleSubmit }>+</button>\n        </form>\n    )\n}\n\nexport default AddTodo;Â "]},"metadata":{},"sourceType":"module"}