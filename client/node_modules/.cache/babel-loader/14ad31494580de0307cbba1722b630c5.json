{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/ideations/todolist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js\";\nimport React, { useState } from 'react';\nexport const TodoContext = React.createContext(); // const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState({\n    todos: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  const handleSetNewTodo = (task, date) => {\n    // Todo: add date functionality\n    const taskId = list.todos.length + 1;\n    const newTodo = {\n      id: taskId,\n      task: task,\n      date: \"\",\n      completed: false\n    };\n    setTodo(newTodo);\n    handleAddToList(newTodo);\n  };\n\n  const handleAddToList = item => {\n    setList(prevState => ({\n      todos: [...prevState.todos, item]\n    }));\n  };\n\n  const handleCompleteTask = id => {\n    const findCompletedTask = list.todos.filter(task => id === task.id);\n\n    const setCompletedTask = () => {\n      setList(prevState => ({\n        todos: [...prevState.todos]\n      }));\n    };\n  };\n\n  const handleDeleteTask = id => {\n    const newState = list.todos.filter(task => id !== task.id);\n    setList(prevState => ({\n      todos: [...prevState, newState]\n    }));\n  };\n\n  return React.createElement(TodoContext.Provider, {\n    value: {\n      handleSetNewTodo,\n      handleAddToList,\n      handleCompleteTask,\n      todo,\n      list\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default TodoProvider;","map":{"version":3,"sources":["/Users/ethanling/Dev/ideations/todolist/client/src/context/TodoProvider.js"],"names":["React","useState","TodoContext","createContext","TodoProvider","props","todo","setTodo","todos","list","setList","handleSetNewTodo","task","date","taskId","length","newTodo","id","completed","handleAddToList","item","prevState","handleCompleteTask","findCompletedTask","filter","setCompletedTask","handleDeleteTask","newState","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACFJ,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QACnBK,IADmB;AAAA,QACbC,OADa;;AAAA,qBAEFN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD,CAFN;AAAA;AAAA,QAEnBC,IAFmB;AAAA,QAEbC,OAFa;;AAI1B,QAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrC;AACA,UAAMC,MAAM,GAAGL,IAAI,CAACD,KAAL,CAAWO,MAAX,GAAoB,CAAnC;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEH,MADQ;AAEZF,MAAAA,IAAI,EAAEA,IAFM;AAGZC,MAAAA,IAAI,EAAE,EAHM;AAIZK,MAAAA,SAAS,EAAE;AAJC,KAAhB;AAOAX,IAAAA,OAAO,CAACS,OAAD,CAAP;AACAG,IAAAA,eAAe,CAACH,OAAD,CAAf;AACH,GAZD;;AAcA,QAAMG,eAAe,GAAGC,IAAI,IAAI;AAC5BV,IAAAA,OAAO,CAAEW,SAAD,KAAgB;AACpBb,MAAAA,KAAK,EAAE,CAAC,GAAGa,SAAS,CAACb,KAAd,EAAqBY,IAArB;AADa,KAAhB,CAAD,CAAP;AAGH,GAJD;;AAMA,QAAME,kBAAkB,GAAIL,EAAD,IAAQ;AAC/B,UAAMM,iBAAiB,GAAGd,IAAI,CAACD,KAAL,CAAWgB,MAAX,CAAmBZ,IAAD,IAAUK,EAAE,KAAKL,IAAI,CAACK,EAAxC,CAA1B;;AACA,UAAMQ,gBAAgB,GAAG,MAAM;AAC3Bf,MAAAA,OAAO,CAAEW,SAAD,KAAgB;AACpBb,QAAAA,KAAK,EAAE,CAAC,GAAGa,SAAS,CAACb,KAAd;AADa,OAAhB,CAAD,CAAP;AAGH,KAJD;AAKH,GAPD;;AASA,QAAMkB,gBAAgB,GAAGT,EAAE,IAAI;AAC3B,UAAMU,QAAQ,GAAGlB,IAAI,CAACD,KAAL,CAAWgB,MAAX,CAAkBZ,IAAI,IAAIK,EAAE,KAAKL,IAAI,CAACK,EAAtC,CAAjB;AACAP,IAAAA,OAAO,CAAEW,SAAD,KAAgB;AACpBb,MAAAA,KAAK,EAAE,CAAC,GAAGa,SAAJ,EAAeM,QAAf;AADa,KAAhB,CAAD,CAAP;AAGH,GALD;;AAOA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHhB,MAAAA,gBADG;AAEHQ,MAAAA,eAFG;AAGHG,MAAAA,kBAHG;AAIHhB,MAAAA,IAJG;AAKHG,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASMJ,KAAK,CAACuB,QATZ,CADJ;AAcH,CAtDD;;AAwDA,eAAexB,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const TodoContext = React.createContext();\n\n// const todoformat = {\n//     text: '',\n//     date: '',\n//     completed: false\n// }\n\n// const todoExample = {\n//     text: 'first todo',\n//     date: '11/12/13',\n//     completed: false\n// }\n\nconst TodoProvider = props => {\n    const [todo, setTodo] = useState('');\n    const [list, setList] = useState({ todos: [] });\n\n    const handleSetNewTodo = (task, date) => {\n        // Todo: add date functionality\n        const taskId = list.todos.length + 1;\n        const newTodo = { \n            id: taskId,\n            task: task,\n            date: \"\",\n            completed: false\n        };\n\n        setTodo(newTodo);\n        handleAddToList(newTodo)\n    }\n\n    const handleAddToList = item => {\n        setList((prevState) => ({\n            todos: [...prevState.todos, item]\n        }))\n    }\n\n    const handleCompleteTask = (id) => {\n        const findCompletedTask = list.todos.filter((task) => id === task.id);\n        const setCompletedTask = () => {\n            setList((prevState) => ({\n                todos: [...prevState.todos, ]\n            }))\n        }\n    }\n\n    const handleDeleteTask = id => {\n        const newState = list.todos.filter(task => id !== task.id);\n        setList((prevState) => ({\n            todos: [...prevState, newState]\n        }));\n    }\n\n    return (\n        <TodoContext.Provider \n            value={{\n                handleSetNewTodo,\n                handleAddToList,\n                handleCompleteTask,\n                todo,\n                list\n            }}\n        >\n            { props.children }\n        </TodoContext.Provider>\n    )\n\n}\n\nexport default TodoProvider;"]},"metadata":{},"sourceType":"module"}